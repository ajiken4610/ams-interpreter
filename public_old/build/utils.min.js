"use strict";var __awaiter=this&&this.__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))};class Synchronizer{constructor(){this.tasks=[]}synchronized(func){return __awaiter(this,void 0,void 0,(function*(){if(this.tasks.length>0){let promise=function(synchronizer){return __awaiter(this,void 0,void 0,(function*(){yield synchronizer.tasks[synchronizer.tasks.length-1],yield func(),synchronizer.tasks=synchronizer.tasks.filter(task=>task!==promise)}))}(this);this.tasks.push(promise),yield promise}else{let promise=func();this.tasks.push(promise),yield promise,this.tasks=this.tasks.filter(task=>task!==promise)}}))}}class Sleeper{static sleep(ms,callback){let promise=new Promise(resolve=>setTimeout(resolve,ms));return promise.then(()=>{}),promise}}class BiGram{static splitBy(text,separators){separators||(separators=[" ","　","\n"]);for(let i=1;i<text.length;i++)text=text.replace(separators[i],separators[0]);return text.split(separators[0])}static createBiGramObject(text,separators){if(separators)return this.createBiGramObjectFromTexts(this.splitBy(text,separators));{let returnObject={};for(let i=0;i<text.length-1;i++)returnObject[text.substring(i,i+2)]=!0;return returnObject}}static createBiGramArray(text,separators){return Object.keys(this.createBiGramObject(text,separators))}static createBiGramObjectFromTexts(array,separators){let returnObject={};return separators?array.forEach(text=>{console.log(text),Object.assign(returnObject,this.createBiGramObjectFromTexts(this.splitBy(text,separators)))}):array.forEach(text=>{Object.assign(returnObject,this.createBiGramObject(text))}),returnObject}static createBiGramArrayFromTexts(array,separators){return Object.keys(this.createBiGramObjectFromTexts(array,separators))}}class DateTexter{static convertDateToText(date,timeUnit){if(date){let now=new Date,sub=DateTexter.YEAR+1;date.getFullYear()===now.getFullYear()&&(sub=DateTexter.YEAR,date.getMonth()===now.getMonth()&&(sub=DateTexter.MONTH,date.getDate()===now.getDate()&&(sub=DateTexter.DAY)));let unit,text="";switch(timeUnit){case DateTexter.MS:text=date.getMilliseconds()+DateTexter.TIME_UNIT[DateTexter.MS];case DateTexter.SEC:text=date.getSeconds()+DateTexter.TIME_UNIT[DateTexter.SEC]+text;case DateTexter.MIN:text=date.getMinutes()+DateTexter.TIME_UNIT[DateTexter.MIN]+text;case DateTexter.HOUR:text=date.getHours()+DateTexter.TIME_UNIT[DateTexter.HOUR]+text;case DateTexter.DAY:text=sub>DateTexter.DAY?date.getDate()+DateTexter.TIME_UNIT[DateTexter.DAY]+text:0==text.length?"今日中":"本日 "+text;case DateTexter.MONTH:sub>DateTexter.MONTH?text=date.getMonth()+1+DateTexter.TIME_UNIT[DateTexter.MONTH]+text:0==text.length&&(text="今月中");case DateTexter.YEAR:sub>DateTexter.YEAR?text=date.getFullYear()+DateTexter.TIME_UNIT[DateTexter.YEAR]+text:0==text.length&&(text="今年中")}return text}return null}}DateTexter.MS=0,DateTexter.SEC=1,DateTexter.MIN=2,DateTexter.HOUR=3,DateTexter.DAY=4,DateTexter.MONTH=5,DateTexter.YEAR=6,DateTexter.TIME_UNIT=["ミリ秒","秒","分","時","日","月","年"];